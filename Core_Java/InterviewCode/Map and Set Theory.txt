
// Now we can use two methods to solve this problem

// 1. Map...
// If we are using map then we need equals() and hasCode().
// Not nessary to use of equals() and hasCode() but it will behive differntly.
// It store the records in key and value ---> 1,"Vishal".
// All the keys must be unique.
// In HashMap we can store only one null key and multiple null values.
// In TreeMap null key not allowed but we can store null values.
// It implements the Map interface.
// It uses the hashtable to store key and values.
// It took constant time for basic operations like inserting, deletion...
// It does not maintain the order of insersation.
// Types of Map 1. HashMap 2. TreeMap 3. LinkedHashMap.

// 2. Set...
// If are using set then we need to write equal() and hashCode().
// Must need to use equals() and hasCode().
// Set dosen't allow the null values.
// If we add duplicates values then it will not change.
// This is unordered.
// Dynamic Sizing.
// It can contais the null values.
// Types of Set 1. HashSet 2.TreeSet 3.LinkedHashSet.

// 3. Tree...
// If we are using the tree then we don't need to write equals() and hasCode().
// It uses Red Balck Tree. This is self balancing tree.
// TreeMap and TreeSet.
